import csv
from pathlib import Path
import sys
from typing import Iterable, List


OUTPUT_COLUMNS = (
    'context_before',
    'word',
    'context_after',
    'gold_diac'
)


def gen_entries(path: Path) -> Iterable[dict[str, str]]:
    """Read entries from a Wild2Max TSV data file.
    """

    with path.open('r', encoding='utf-8') as fp:
        reader = csv.DictReader(fp,
                                dialect='excel-tab',
                                quotechar=None,
                                quoting=csv.QUOTE_NONE)
        for row in reader:
            row['gold_diac'] = row['max_gold']
            yield row


def group_genre_entries(entries: Iterable[dict[str, str]]) -> dict[str, List[dict[str, str]]]:
    """Group entries by genre (case insensitive).
    """

    genre_entries = {}

    for entry in entries:
        genre = entry['genre'].strip().lower()
        if genre not in genre_entries:
            genre_entries[genre] = []
        genre_entries[genre].append(entry)

    return genre_entries


def write_entries(path: Path, entries: Iterable[dict[str, str]]):
    """Write entries to a TSV file at a given path.
    """

    with path.open('w', encoding='utf-8') as fp:
        writer = csv.DictWriter(fp,
                                dialect='excel-tab',
                                fieldnames=OUTPUT_COLUMNS,
                                quotechar=None,
                                quoting=csv.QUOTE_NONE,
                                extrasaction='ignore',
                                lineterminator='\n')
        writer.writeheader()
        writer.writerows(entries)


def main():
    input_path = Path(sys.argv[1])
    output_dir_path = Path(sys.argv[2])

    data_entries = gen_entries(input_path)
    genre_entries = group_genre_entries(data_entries)

    for genre, entries in genre_entries.items():
        output_path = Path(output_dir_path, f'{genre}.tsv')
        write_entries(output_path, entries)


if __name__ == '__main__':
    main()
